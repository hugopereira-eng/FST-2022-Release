[Unit]
After=NetworkManager.service time-sync.target
# network-online.target
[Service]
Type=forking
User=fst10d
# Start roscore as a fork and then wait for the tcp port to be opened
# —————————————————————-
# Source all the environment variables, start roscore in a fork
# Since the service type is forking, systemd doesn’t mark it as
# ‘started’ until the original process exits, so we have the
# non-forked shell wait until it can connect to the tcp opened by
# roscore, and then exit, preventing conflicts with dependant services
ExecStart=/etc/ros/startup.sh
[Install]
WantedBy=multi-user.target

#[Unit]
#Description=start roscore
#After=remote-fs.target
#After=syslog.target
#[Service]
#ExecStart=/home/aeroless/startup_scripts/roscore_startup.sh
#Restart=on-abort

#[Install]
#WantedBy=multi-user.target
